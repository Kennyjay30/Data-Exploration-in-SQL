-- POSTGRE SQL ASSIGNMENT
-- 1) HOW MANY PAYMENT TRANSACTION WERE GREATER THAN $5.00?
SELECT COUNT(AMOUNT) AS NO_OF_TRANS FROM PAYMENT
WHERE AMOUNT >5;

--2) HOW MANY ACTORS HAVE A FIRST NAME THAT STARTS WITH THE LETTER P?
SELECT COUNT(FIRST_NAME) AS NO_OF_ACTORS_THAT_START_WITH_P FROM ACTOR
WHERE FIRST_NAME LIKE 'P%';

--3) HOW MANY UNIQUE DISTRICTS ARE OUR CUSTOMERS FROM?
SELECT COUNT(ADDRESS_ID) AS NO_OF_UNIQUE_DISTRICT FROM CUSTOMER;

--4) RETRIEVE THE LIST OF NAMES FOR THOSE DISTINCT DISTRICTS FROM THE PREVIOUS QUESTION.
SELECT ADDRESS_ID, CONCAT_WS(' ',FIRST_NAME,LAST_NAME) FROM CUSTOMER;

--5) HOW MANY FILMS HAVE THE WORD TRUMAN SOMEWHERE IN THE TITLE?
SELECT COUNT(TITLE) AS NO_OF_FILMS_WITH_TRUMAN FROM FILM
WHERE TITLE LIKE '%Truman%';

--6) CREATE A TABLE TO ORGANIZE OUR POTENTIAL LEADS! WE WILL HAVE THE FOLLOWING INFORMATION: A CUSTOMER'S FIRST NAME,LAST NAME,EMAIL,SIGN-UP DATE, AND THE NUMBER OF MINUTES SPENT ON THE DVD RENTAL SITE. YOU SHOULD ALSO HAVE SORT OF ID TRACKER FOR THEM. YOU HAVE FREE REIGN ON HOW YOU WANT TO CREATE THIS TABLE

CREATE TABLE POTENTIAL_LEADS (
	CUSTOMER_ID INT PRIMARY KEY,
	FIRST_NAME VARCHAR(20) NOT NULL,
	LAST_NAME VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(40) NOT NULL,
	SIGNUP_DATE VARCHAR(10) NOT NULL,
	NO_OF_MINS_SPENT_ON_DVDRENTAL INT NOT NULL
	);

INSERT INTO POTENTIAL_LEADS
	(CUSTOMER_ID,FIRST_NAME,LAST_NAME,EMAIL,SIGNUP_DATE,NO_OF_MINS_SPENT_ON_DVDRENTAL)
VALUES 
	(001,'KEHINDE','OLATUNBOSUN','kehindeolatunbosun@gmail.com','01-12-24','30'),
	(002,'TAIWO','OLATUNBOSUN','taiwoolatunbosun@gmail.com','02-12-24','35'),
	(003,'WURAOLA','ADEOSUN','wuraolaadeosun@gmail.com','03-12-24','40'),
	(004,'HANNAH','OGUNLEYE','hannahogunleye@gmail.com','04-12-24','45'),
	(005,'ADUNOLA','OGUNLEYE','adunolaogunleye@gmail.com','05-12-24','50');
SELECT * FROM POTENTIAL_LEADS;

--7) WHAT CUSTOMER HAS THE HIGHEST CUSTOMER_ID NUMBER WHOSE NAME STARTS WITH AN 'E' AND HAS AN ADRESS ID LOWER THAN 500?
SELECT MAX(CUSTOMER_ID) AS HIGHEST_CUSTOMER_ID_NUMBER, ADDRESS_ID, FIRST_NAME FROM CUSTOMER
GROUP BY CUSTOMER_ID
HAVING FIRST_NAME LIKE 'E%' AND ADDRESS_ID <500
ORDER BY CUSTOMER_ID DESC;

--8) RETURN THE CUSTOMER IDs OF CUSTOMERS WHO HAVE SPENT AT LEAST $110 WITH THE STAFF MEMBER WHO HAS AN ID OF 2?
SELECT * FROM PAYMENT;
SELECT CUSTOMER_ID, STAFF_ID, SUM(AMOUNT) AS TOTAL_AMOUNT FROM PAYMENT
GROUP BY CUSTOMER_ID, STAFF_ID
HAVING SUM(AMOUNT) >=110 AND STAFF_ID = 2;

--9) HOW MANY FILMS HAVE A RATING OF R AND REPLACEMENT_COST BETWEEN $5 AND $15?
SELECT COUNT(RATING) AS NO_OF_FILMS_WITH_R_ON_RATING FROM FILM
WHERE RATING = 'R' AND REPLACEMENT_COST BETWEEN 5 AND 15;

--10) WHAT IS THE MAXIMUM PAYMENT TRANSACTION DONE BY THE CUSTOMER?
SELECT CUSTOMER_ID, MAX(AMOUNT) AS MAX_PAYMENT_TRASN FROM PAYMENT
GROUP BY CUSTOMER_ID
ORDER BY CUSTOMER_ID ASC;

